#N canvas 394 91 750 581 10;
#X obj 85 33 inlet;
#X obj 175 83 inlet;
#X obj 220 267 outlet;
#X obj 427 166 r \$0-state;
#N canvas 889 57 477 393 init 0;
#X obj 179 35 inlet;
#X obj 221 310 outlet;
#X obj 179 59 route left right timer;
#X obj 131 122 v \$0-leftval;
#X obj 108 143 s \$0-del;
#X msg 85 167 waitright;
#X obj 85 192 s \$0-state;
#X obj 261 122 s \$0-del;
#X obj 229 171 s \$0-state;
#X msg 229 146 waitleft;
#X obj 229 96 t b b;
#X text 279 75 ignore timer events;
#X text 132 286 this state never outputs anything;
#X obj 85 97 t b b a;
#X connect 0 0 2 0;
#X connect 2 0 13 0;
#X connect 2 1 10 0;
#X connect 5 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 10 1 7 0;
#X connect 13 0 5 0;
#X connect 13 1 4 0;
#X connect 13 2 3 0;
#X restore 220 215 pd init;
#X obj 16 398 loadbang;
#X msg 16 422 init;
#X obj 16 442 s \$0-state;
#X text 541 210 state handlers;
#X obj 321 53 r \$0-del-rcv;
#X obj 85 56 list prepend left;
#X obj 175 104 list prepend right;
#X obj 321 99 list prepend timer;
#X text 465 99 events;
#X obj 321 76 delay \$1;
#N canvas 484 433 501 261 waitright 0;
#X obj 179 35 inlet;
#X obj 261 145 outlet;
#X obj 179 59 route left right timer;
#X obj 121 114 v \$0-leftval;
#X obj 89 135 s \$0-del;
#X obj 229 195 s \$0-state;
#X obj 229 96 t b b;
#X text 64 163 no state change;
#X obj 261 119 v \$0-leftval;
#X msg 229 170 init;
#X obj 373 127 s \$0-state;
#X msg 373 102 init;
#X obj 89 92 t b a;
#X connect 0 0 2 0;
#X connect 2 0 12 0;
#X connect 2 1 6 0;
#X connect 2 2 11 0;
#X connect 6 0 9 0;
#X connect 6 1 8 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 11 0 10 0;
#X connect 12 0 4 0;
#X connect 12 1 3 0;
#X restore 323 215 pd waitright;
#N canvas 624 140 524 245 waitleft 0;
#X obj 179 35 inlet;
#X obj 179 59 route left right timer;
#X obj 117 147 s \$0-state;
#X obj 229 146 s \$0-del;
#X obj 85 170 outlet;
#X obj 85 97 t a b;
#X msg 117 122 init;
#X text 212 167 no state change;
#X text 234 109 reset timer. msg is a bang;
#X obj 367 142 s \$0-state;
#X msg 367 117 init;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 3 0;
#X connect 1 2 10 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X connect 6 0 2 0;
#X connect 10 0 9 0;
#X restore 427 215 pd waitleft;
#X obj 220 192 demux3 init waitright waitleft;
#X text 10 520 output the left value if both inlets fire within a threshold
Currently only supports numerical left-hand values \, because of [value]
storage. argument is threshold in ms, f 80;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 3 0 17 1;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 9 0 14 0;
#X connect 10 0 17 0;
#X connect 11 0 17 0;
#X connect 12 0 17 0;
#X connect 14 0 12 0;
#X connect 15 0 2 0;
#X connect 16 0 2 0;
#X connect 17 0 4 0;
#X connect 17 1 15 0;
#X connect 17 2 16 0;
